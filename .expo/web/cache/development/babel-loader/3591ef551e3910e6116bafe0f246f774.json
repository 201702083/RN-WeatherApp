{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macbook/3-1/RN-WeatherApp/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { setStatusBarTranslucent, StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainScreen from \"./Input\";\nimport DetailScreen from \"./Detail\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"MAIN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"MAIN\",\n        component: MainScreen,\n        options: {\n          title: '도시 검색'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"DETAIL\",\n        component: DetailScreen,\n        options: {\n          title: '상세 정보'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  fullscreen: {\n    flex: 1\n  },\n  Search: {\n    backgroundColor: 'black',\n    alignItems: 'left',\n    justifyContent: 'center'\n  },\n  Result: {},\n  container: {\n    flex: 1,\n    margin: 30,\n    backgroundColor: 'blue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 50\n  },\n  ButtonContainer: {\n    width: 300,\n    borderColor: 'black',\n    borderWidth: 10,\n    alignItems: 'center',\n    backgroundColor: 'red',\n    margin: 5\n  }\n});","map":{"version":3,"sources":["/Users/macbook/3-1/RN-WeatherApp/App.js"],"names":["setStatusBarTranslucent","StatusBar","React","NavigationContainer","createStackNavigator","MainScreen","DetailScreen","Stack","App","title","Component","styles","StyleSheet","create","fullscreen","flex","Search","backgroundColor","alignItems","justifyContent","Result","container","margin","text","fontSize","ButtonContainer","width","borderColor","borderWidth"],"mappings":";;;;;;;;;;;AAAA,SAASA,uBAAT,EAAkCC,SAAlC,QAAmD,iBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;IAEqBI,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEH,UAArC;AACE,QAAA,OAAO,EAAE;AACPI,UAAAA,KAAK,EAAE;AADA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAEH,YAAvC;AACE,QAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAE;AADA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAFN,CADF;AAgBD;;;;EAlB8BP,KAAK,CAACQ,S;;SAAlBF,G;AAqBrB,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE;AADI,GADmB;AAI/BC,EAAAA,MAAM,EAAC;AACLC,IAAAA,eAAe,EAAG,OADb;AAELC,IAAAA,UAAU,EAAG,MAFR;AAGLC,IAAAA,cAAc,EAAG;AAHZ,GAJwB;AAU/BC,EAAAA,MAAM,EAAC,EAVwB;AAa/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,MAAM,EAAG,EAFA;AAGTL,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GAboB;AAoB/BI,EAAAA,IAAI,EAAC;AACHC,IAAAA,QAAQ,EAAC;AADN,GApB0B;AAuB/BC,EAAAA,eAAe,EAAC;AACdC,IAAAA,KAAK,EAAG,GADM;AAEdC,IAAAA,WAAW,EAAE,OAFC;AAGdC,IAAAA,WAAW,EAAC,EAHE;AAIdV,IAAAA,UAAU,EAAC,QAJG;AAKdD,IAAAA,eAAe,EAAC,KALF;AAMdK,IAAAA,MAAM,EAAC;AANO;AAvBe,CAAlB,CAAf","sourcesContent":["import { setStatusBarTranslucent, StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport {SafeAreaView, Image, Text,TextInput, Button, StyleSheet, View, Alert } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n\nimport MainScreen from './Input';\nimport DetailScreen from './Detail';\n\nconst Stack = createStackNavigator();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <NavigationContainer>\n\n            <Stack.Navigator initialRouteName=\"MAIN\">\n              <Stack.Screen name=\"MAIN\" component={MainScreen}\n                options={{\n                  title: '도시 검색'\n              }}/>\n\n              <Stack.Screen name=\"DETAIL\" component={DetailScreen}\n                options={{\n                  title: '상세 정보'\n              }}/>\n            </Stack.Navigator>\n          </NavigationContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  fullscreen: {\n    flex: 1,\n  },\n  Search:{\n    backgroundColor : 'black',\n    alignItems : 'left',\n    justifyContent : 'center'\n\n  },\n  Result:{\n\n  },\n  container: {\n    flex: 1,\n    margin : 30,\n    backgroundColor: 'blue',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text:{\n    fontSize:50,\n  },\n  ButtonContainer:{\n    width : 300,\n    borderColor: 'black',\n    borderWidth:10,\n    alignItems:'center',\n    backgroundColor:'red',\n    margin:5\n  }\n});\n"]},"metadata":{},"sourceType":"module"}