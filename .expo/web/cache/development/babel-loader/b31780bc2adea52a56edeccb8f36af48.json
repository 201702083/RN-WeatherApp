{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macbook/3-1/RN-WeatherApp/Detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar moment = require('moment');\n\nvar DetailScreen = function (_Component) {\n  _inherits(DetailScreen, _Component);\n\n  var _super = _createSuper(DetailScreen);\n\n  function DetailScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DetailScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      main: null,\n      dt: null,\n      temp_current: null,\n      temp_feel: null,\n      temp_min: null,\n      temp_max: null,\n      clouds: null,\n      hum: null,\n      test: false\n    };\n    return _this;\n  }\n\n  _createClass(DetailScreen, [{\n    key: \"componentMount\",\n    value: function componentMount() {\n      var _this2 = this;\n\n      return fetch(\"https://api.openweathermap.org/data/2.5/find?q=\" + this.props.route.params.text + \"&appid=e5ea91bc97a4a071bfb4d4d27fe05ae1\").then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this2.setState({\n          dt: moment(responseJson.list[0].dt).format(\"YYYY-MM-DD\"),\n          test: true\n        });\n\n        console.log(_this2.state);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.test) {\n        this.componentMount();\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, \"How is the Weather today\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, \"\\uAC80\\uC0C9\\uD55C \\uB3C4\\uC2DC\"), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          backgroundColor: '#aaaaaa',\n          borderRadius: 5,\n          padding: 5,\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, this.props.route.params.text));\n    }\n  }]);\n\n  return DetailScreen;\n}(Component);\n\nexport { DetailScreen as default };","map":{"version":3,"sources":["/Users/macbook/3-1/RN-WeatherApp/Detail.js"],"names":["React","Component","moment","require","DetailScreen","props","state","main","dt","temp_current","temp_feel","temp_min","temp_max","clouds","hum","test","fetch","route","params","text","then","response","json","responseJson","console","log","setState","list","format","catch","error","componentMount","fontSize","backgroundColor","borderRadius","padding","margin"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEI,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;IAEiBC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG,IADE;AAETC,MAAAA,EAAE,EAAG,IAFI;AAGTC,MAAAA,YAAY,EAAG,IAHN;AAITC,MAAAA,SAAS,EAAG,IAJH;AAKTC,MAAAA,QAAQ,EAAG,IALF;AAMTC,MAAAA,QAAQ,EAAG,IANF;AAOTC,MAAAA,MAAM,EAAG,IAPA;AAQTC,MAAAA,GAAG,EAAG,IARG;AASTC,MAAAA,IAAI,EAAC;AATI,KAAb;AAFc;AAajB;;;;WAED,0BAAgB;AAAA;;AACZ,aAAOC,KAAK,CAAC,oDAAmD,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,IAA3E,GAAgF,yCAAjF,CAAL,CACNC,IADM,CACA,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADA,EAENF,IAFM,CAEA,UAACG,YAAD,EAAkB;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACI,QAAA,MAAI,CAACG,QAAL,CAAc;AAEVlB,UAAAA,EAAE,EAAGN,MAAM,CAACqB,YAAY,CAACI,IAAb,CAAkB,CAAlB,EAAqBnB,EAAtB,CAAN,CAAgCoB,MAAhC,CAAuC,YAAvC,CAFK;AASVb,UAAAA,IAAI,EAAG;AATG,SAAd;;AAWAS,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACnB,KAAjB;AACH,OAhBM,EAiBNuB,KAjBM,CAiBA,UAACC,KAAD,EAAW;AACdN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH,OAnBM,CAAP;AAoBH;;;WAEH,kBAAS;AACC,UAAG,CAAC,KAAKxB,KAAL,CAAWS,IAAf,EAAoB;AACR,aAAKgB,cAAL;AACX;;AACD,aACU,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAC,EAAV;AAAcC,UAAAA,eAAe,EAAE,SAA/B;AAA0CC,UAAAA,YAAY,EAAE,CAAxD;AAA2DC,UAAAA,OAAO,EAAC,CAAnE;AAAsEC,UAAAA,MAAM,EAAC;AAA7E,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAK/B,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,IADzB,CAHF,CADV;AAUP;;;;EArDqClB,S;;SAArBG,Y","sourcesContent":["import React, { Component } from 'react';\nimport { Button,View, Text, } from 'react-native';\n    const moment = require('moment');\n\nexport default class DetailScreen extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            main : null,\n            dt : null,\n            temp_current : null,\n            temp_feel : null,\n            temp_min : null,\n            temp_max : null,\n            clouds : null,\n            hum : null,\n            test:false,\n        }\n    }\n\n    componentMount(){\n        return fetch(\"https://api.openweathermap.org/data/2.5/find?q=\"+ this.props.route.params.text+\"&appid=e5ea91bc97a4a071bfb4d4d27fe05ae1\")\n        .then( (response) => response.json() )\n        .then( (responseJson) => {\n        console.log(responseJson)\n            this.setState({\n//                main : responseJson.weather[0].main,\n                dt : moment(responseJson.list[0].dt).format(\"YYYY-MM-DD\") ,\n//                temp_current : responseJson.main.temp,\n//                temp_feel : responseJson.main.feels_like,\n//                temp_min: responseJson.main.temp_min,\n//                temp_max: responseJson.main.temp_max,\n//                clouds : responseJson.clouds.all,\n//                hum : responseJson.main.humidity,\n                test : true,\n            });\n            console.log(this.state);\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    }\n\n  render() {\n            if(!this.state.test){\n                        this.componentMount();\n            }\n            return (\n                      <View>\n                        <Text style={{fontSize:30}}>How is the Weather today</Text>\n                        <Text>검색한 도시</Text>\n                        <Text style={{fontSize:30, backgroundColor: '#aaaaaa', borderRadius: 5, padding:5, margin:5}}>\n                        {this.props.route.params.text}\n                        </Text>\n                      </View>\n                    );\n\n    }\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}