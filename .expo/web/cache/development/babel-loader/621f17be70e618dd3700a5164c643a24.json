{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macbook/3-1/RN-WeatherApp/Detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport moment from 'moment';\nimport Show from \"./show\";\nimport Clear from \"./weatherIcon/Clear.png\";\n\nvar DetailScreen = function (_Component) {\n  _inherits(DetailScreen, _Component);\n\n  var _super = _createSuper(DetailScreen);\n\n  function DetailScreen(props) {\n    var _this;\n\n    _classCallCheck(this, DetailScreen);\n\n    _this = _super.call(this, props);\n\n    var moment = require('moment');\n\n    _this.state = {\n      weatherData: []\n    };\n    return _this;\n  }\n\n  _createClass(DetailScreen, [{\n    key: \"componentMount\",\n    value: function componentMount() {\n      var _this2 = this;\n\n      return fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\" + this.props.route.params.text + \"&appid=e5ea91bc97a4a071bfb4d4d27fe05ae1\").then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this2.setState({\n          weatherData: [].concat(responseJson.list[0], responseJson.list[1], responseJson.list[2], responseJson.list[3], responseJson.list[4], responseJson.list[5]),\n          test: true\n        });\n\n        console.log(_this2.state);\n      }).catch(function (error) {\n        _this2.ErrorView();\n\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"ErrorView\",\n    value: function ErrorView() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }\n      }, \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }\n      }, \"\\uAC80\\uC0C9\\uD55C \\uB3C4\\uC2DC\"), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          backgroundColor: '#aaaaaa',\n          borderRadius: 5,\n          padding: 5,\n          margin: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 30\n        }\n      }, \"!Error\"));\n    }\n  }, {\n    key: \"Weather\",\n    value: function Weather(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.weatherbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, moment(item.dt_txt).format(\"HH\"), \"\\uC2DC\", \"\\n\", (item.main.temp - 273).toFixed(1), \" 'C  ( \", (item.main.temp_max - 273).toFixed(1), \" - \", (item.main.temp_min - 273).toFixed(1), \" )\", \"\\n\", item.main.humidity, \" %\"));\n    }\n  }, {\n    key: \"WeatherMainImage\",\n    value: function WeatherMainImage() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.test) this.componentMount();\n\n      if (!this.state.test) {\n        return React.createElement(this.ErrorView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 40\n          }\n        });\n      } else {\n        return React.createElement(SafeAreaView, {\n          style: styles.fullscreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }\n        }, \"How is the Weather today\"), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 30\n          }\n        }, \"\\uAC80\\uC0C9\\uD55C \\uB3C4\\uC2DC\"), React.createElement(Text, {\n          style: {\n            fontSize: 30,\n            backgroundColor: '#aaaaaa',\n            borderRadius: 5,\n            padding: 5,\n            margin: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 30\n          }\n        }, this.props.route.params.text), React.createElement(StatusBar, {\n          style: \"auto\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        })), React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }, this.state.weatherData.map(function (item, index) {\n          return React.createElement(_this3.Weather, {\n            key: index,\n            item: item,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }\n          });\n        })));\n      }\n    }\n  }]);\n\n  return DetailScreen;\n}(Component);\n\nexport { DetailScreen as default };\nvar styles = StyleSheet.create({\n  fullscreen: {\n    flex: 1\n  },\n  weatherbox: {\n    width: 400,\n    height: 100,\n    flex: 1,\n    padding: 5,\n    borderWidth: 1,\n    borderRadius: 3,\n    lineHeight: 30\n  },\n  Search: {\n    backgroundColor: 'black',\n    alignItems: 'left',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/macbook/3-1/RN-WeatherApp/Detail.js"],"names":["React","Component","moment","Show","Clear","DetailScreen","props","require","state","weatherData","fetch","route","params","text","then","response","json","responseJson","console","log","setState","concat","list","test","catch","error","ErrorView","fontSize","backgroundColor","borderRadius","padding","margin","item","styles","weatherbox","dt_txt","format","main","temp","toFixed","temp_max","temp_min","humidity","componentMount","fullscreen","map","index","StyleSheet","create","flex","width","height","borderWidth","lineHeight","Search","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {FlatList,SafeAreaView, StatusBar, ScrollView, Button,View, Text, StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport Show from './show';\nimport Clear from './weatherIcon/Clear.png'\n\n\nexport default class DetailScreen extends Component {\n    constructor(props){\n        super(props);\n        const moment = require('moment');\n\n        this.state = {\n            weatherData : [], // Test\n\n        }\n    }\n\n    componentMount(){\n        return fetch(\"https://api.openweathermap.org/data/2.5/forecast?q=\"+ this.props.route.params.text+\"&appid=e5ea91bc97a4a071bfb4d4d27fe05ae1\")\n        .then( (response) => response.json() )\n        .then( (responseJson) => {\n        console.log(responseJson)\n            this.setState({\n                  weatherData : [].concat(responseJson.list[0],responseJson.list[1],responseJson.list[2],responseJson.list[3],responseJson.list[4],responseJson.list[5]),\n                test : true, // 호출이 되면 true로\n            });\n            console.log(this.state); // 테스트용 출력\n        })\n        .catch((error) => {\n            this.ErrorView()\n            console.log(error)\n        });\n    }\n\n    ErrorView(){\n        return(\n                        <View>\n                             <Text style={{fontSize:30}}>검색 결과가 없습니다.</Text>\n                             <Text>검색한 도시</Text>\n                             <Text style={{fontSize:30, backgroundColor: '#aaaaaa', borderRadius: 5, padding:5, margin:5}}>\n                             !Error\n                             </Text>\n                        </View>\n        );\n    }\n\n    Weather({item}){   // 날씨별 이미지 , 기온 ( 최고, 최저 ) , 습도 까지만 일단 출력\n        return(\n            <View style = {styles.weatherbox}>\n                <Text style={styles.text}>\n                {moment(item.dt_txt).format(\"HH\")}시\n                {\"\\n\"}\n                {(item.main.temp - 273).toFixed(1)} 'C  ( {(item.main.temp_max - 273).toFixed(1)} - {(item.main.temp_min - 273).toFixed(1)} )\n                {\"\\n\"}\n                {(item.main.humidity)} %\n                </Text>\n            </View>\n        );\n    }\n    WeatherMainImage(){\n\n    }\n    render(){\n        if(!this.state.test) this.componentMount()\n        if(!this.state.test) { return (<this.ErrorView/>);}\n        else{ // 도시 검색 성공\n                return(\n\n                   <SafeAreaView style = {styles.fullscreen}>\n                        <View>\n                             <Text style={{fontSize:30}}>How is the Weather today</Text>\n                             <Text>검색한 도시</Text>\n                             <Text style={{fontSize:30, backgroundColor: '#aaaaaa', borderRadius: 5, padding:5, margin:5}}>\n                             {this.props.route.params.text}\n                             </Text>\n                            <StatusBar style=\"auto\"/>\n                        </View>\n                        <ScrollView>\n                            {this.state.weatherData.map( (item,index) => // DATA 에 들어있는 컴포넌트 반복 실행\n                                <this.Weather key={index} item = {item}/> // Call Weather(item)\n                            )}\n\n                        </ScrollView>\n                   </SafeAreaView>\n\n                );\n        }\n\n    }\n\n}\n\nconst styles = StyleSheet.create({\n  fullscreen: {\n    flex: 1,\n  },\n  weatherbox: {\n    width:400,\n    height:100,\n    flex:1,\n    padding : 5,\n    borderWidth : 1,\n    borderRadius : 3,\n    lineHeight: 30,\n\n  },\n  Search:{\n    backgroundColor : 'black',\n    alignItems : 'left',\n    justifyContent : 'center'\n\n  },\n});\n"]},"metadata":{},"sourceType":"module"}